global:
  apiKey: "latest"
  version: "git-e37d0eb"
  labels:
    app: mcpo

mcpo:
  controllers:
    main:
      type: deployment
      strategy: Recreate
      replicas: 1
      labels:
        main: main-app
      containers:
        mcpo:
          image:
            repository: ghcr.io/open-webui/mcpo
            tag: "{{ .Values.global.version }}"
            pullPolicy: IfNotPresent
          
          command: /bin/sh
          
          args:
            - -c
            - |
              set -e
              mcpo --api-key $API_KEY --config=/tmp/config.json
          
          resources:
            requests:
              cpu: 125m
              memory: 256Mi
            limits:
              cpu: 400m
              memory: 512Mi
          
          envFrom:
            - secretRef:
                name: '{{ .Release.Name }}-api-key'
    playwright:
      type: deployment
      strategy: Recreate
      replicas: 1
      labels:
        playwright: playwright-app
      containers:
        playwright:
          image:
            repository: mcr.microsoft.com/playwright
            tag: v1.52.0-noble
          
          command: /bin/sh
          
          args:
            - -c
            - |
              npx -y playwright@1.52.0 run-server --port 3000 --host 0.0.0.0
          
          resources:
            requests:
              cpu: 125m
              memory: 256Mi
            limits:
              cpu: 400m
              memory: 512Mi
  
  service:
    mcpo:
      enabled: true
      annotations: { }
      type: ClusterIP
      controller: main
      ports:
        http:
          enabled: true
          port: 8000
          targetPort: 8000
    playwright:
      enabled: true
      annotations: { }
      type: ClusterIP
      controller: playwright
      ports:
        http:
          enabled: true
          port: 3000
          targetPort: 3000
  
  ingress:
    mcpo:
      enabled: true
      annotations: { }
      #className: 'nginx'
      hosts:
        - host: mcpo.example.com
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: mcpo
                port: http
      tls:
        - secretName: mcpo-example-com-secret
          hosts:
            - mcpo.example.com
  
  configMaps:
    config:
      enabled: true
      annotations:
        description: 'Common configuration for the MCPo.'
      data:
        "playwright.json": |
          {
            "browser": {
              "remoteEndpoint": "ws://{{ .Release.Name }}-playwright:3000",
              "launchOptions": {
                "headless": true
              }
            },
            "vision": true
          }
        "config.json": |
          {}
  
  secrets:
    api-key:
      enabled: true
      annotations:
        description: 'Api-Key configuration for the MCPo.'
      stringData:
        API_KEY: "minio"
  
  networkpolicies:
    main:
      enabled: true
      controller: main
      policyTypes:
        - Ingress
      rules:
        ingress:
          - from:
              - podSelector:
                  matchLabels:
                    app: mcpo
            ports:
              - protocol: TCP
                port: 8000
    playwright:
      enabled: true
      controller: playwright
      policyTypes:
        - Ingress
      rules:
        ingress:
          - from:
              - podSelector:
                  matchLabels:
                    app: playwright
            ports:
              - protocol: TCP
                port: 3000
                
  persistence:
    config:
      enabled: true
      type: configMap
      name: '{{ .Release.Name }}-config'
      advancedMounts:
        main:
          mcpo:
            - path: /tmp/config.json
              readOnly: true
              subPath: config.json
            - path: /tmp/playwright.json
              readOnly: true
              subPath: playwright.json
  